@model List<Note>
@{
    ViewData["Title"] = "Semua Note";
}

<div class="d-flex justify-content-between align-items-center mb-2">
    <h2 class="fw-semibold">Semua Note</h2>
    <button class="btn btn-primary rounded-pill shadow-sm" data-bs-toggle="modal" data-bs-target="#createModal">
        <i class="bi bi-plus-circle me-1"></i> Tambah Note
    </button>
</div>
<hr />
<div class="row" id="notesContainer">
    @if (Model.Count > 0)
    {
        <div class="row">
        @foreach (var note in Model)
        {

                <div class="col-sm-6 col-lg-4 mb-4 cursor-pointer">
                    <div class="card card-border-shadow-primary h-100"
                         onclick="window.location.href='/Note/Detail?id=@note.Id'">
                        <div class="card-body">
                            <div class="d-flex align-items-center justify-content-between mb-2 pb-1">
                                <div class="d-flex">
                                    <div class="avatar me-2">
                                        <span class="avatar-initial rounded bg-label-primary"><i class="bx bxs-playlist"></i></span>
                                    </div>
                                    <h4 class="ms-1 mb-0 text-nowrap px-3">@note.Entries.Count entry</h4>
                                </div>
                                <p class="mb-0 px-2">
                                    <span class="text-warning ps-2"
                                            onclick="event.stopPropagation(); openEditModal(@note.Id);">
                                        <i class="bi bi-pencil-square"></i>
                                    </span>
                                    <span class="text-danger ps-2"
                                            onclick="event.stopPropagation(); openDeleteModal(@note.Id, '@note.Title');">
                                        <i class="bi bi-trash3"></i>
                                    </span>
                                </p>
                            </div>
                            <p class="mb-1"> @note.Title</p>
                        </div>
                    </div>
                </div>
         
        }
        </div>
        <hr />

    }
    else
    {
        <div class="col-12">
            <div class="alert alert-info text-center rounded-4 shadow-sm">
                <i class="bi bi-info-circle me-2"></i> Belum ada note. Tambahkan satu dengan tombol di atas.
            </div>
        </div>
    }
</div>
<div class="row note-table">
    <div class="col-12">
        <div class="card p-3">
            <table class="card-datatable table table-condensed" id="tableTimesheet">
                <thead>
                    <tr>
                        <th rowspan="2" style="align-content:center">Date</th>
                        <th colspan="2" style="align-content:center">Working Hour</th>
                        <th colspan="2" style="align-content:center">Over Time</th>
                        <th rowspan="2" style="align-content:center">Total Hour</th>
                        <th rowspan="2" style="align-content:center">Total OT</th>
                        <th rowspan="2" style="align-content:center">Status</th>
                        <th rowspan="2" style="align-content:center">Activity/Remark</th>
                    </tr>
                    <tr>
                        <th>Start</th>
                        <th>End</th>
                        <th>Start</th>
                        <th>End</th>
                    </tr>
                </thead>
            </table>

        </div>
    </div>
</div>

<!-- Modals -->
<div id="modalContainer">
    @await Html.PartialAsync("_NoteModals", new Note())
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // CREATE Note
        $("#createNoteForm").submit(function (e) {

            const $btn = $("#saveNote");
            const originalHtml = $btn.html();
            $btn.prop("disabled", true).html(`<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span> Menyimpan...`);

            var token = $('input[name="__RequestVerificationToken"]').val();
            e.preventDefault();
            $.ajax({
                type: "POST",
                url: "/Home/Create",
                data: $(this).serialize(),
                headers: {
                    'RequestVerificationToken': token
                },
                success: function () {
                    $("#createModal").modal('hide');
                    location.reload();
                }
            });
        });

        // OPEN Edit Modal
        function openEditModal(id) {
            $.get("/Home/Edit/" + id, function (html) {
                $("#editModalContent").html(html);
                $("#editModal").modal('show');
            });
        }

        // OPEN Delete Modal
        function openDeleteModal(id, title) {
            $("#deleteNoteId").val(id);
            $("#deleteNoteTitle").text(title);
            $("#deleteModal").modal('show');
        }

        // DELETE Note
        $("#deleteNoteForm").submit(function (e) {
            //loading spinner
            const $btn = $("#deleteBtn");
            const originalHtml = $btn.html();
            $btn.prop("disabled", true).html(`<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span> Menyimpan...`);

            e.preventDefault();
            const id = $("#deleteNoteId").val();
            $.post("/Home/DeleteConfirmed?id="+ id, function () {
              
                location.reload();
                $("#deleteModal").modal('hide');
            });
        });

        $(document).ready(function(){
            var table = $("#tableTimesheet").DataTable({
                // Konfigurasi dasar
                "paging": true,           // Aktifkan pagination
                "scrollX": true,
                "lengthChange": true,    // Nonaktifkan opsi untuk mengubah jumlah baris per halaman
                "searching": true,        // Aktifkan fitur pencarian
                "ordering": true,         // Aktifkan fitur pengurutan kolom
                "info": true,             // Tampilkan informasi tabel
                "autoWidth": false,       // Nonaktifkan pengaturan otomatis lebar kolom
                "responsive": false,

                // Customisasi kolom tertentu
                "columnDefs": [
                    { "orderable": false, "targets": [5] }, // Nonaktifkan pengurutan pada kolom 'Action'
                    { "className": "text-center", "targets": "_all" }, // Set text-center pada semua kolom
                ],

                // Set opsi untuk language (Opsional)
                "language": {
                    "lengthMenu": "Show _MENU_ entries",
                    "zeroRecords": "Data is Empty",
                    "info": "Show _PAGE_ from _PAGES_ pages",
                    "infoEmpty": "Data Not Available",
                    "infoFiltered": "(filter from _MAX_ total data)"
                }
            });
            
        });
    </script>
}
