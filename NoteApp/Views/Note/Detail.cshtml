@model NoteApp.Models.Note
@inject NoteApp.Services.IDailyEntryService _entryService
@{
    DateTime selectedDate = ViewBag.SelectedDate;
    var entry = ViewBag.Entry as NoteApp.Models.DailyEntry;
    ViewData["Title"] = "Detail";
}
<style>
    .flatpickr-input {
        font-size: 0.85rem; /* perkecil font */
        padding: 0.25rem 0.5rem; /* kecilkan padding */
        height: 30px; /* sesuaikan tinggi */
    }
</style>
<div class="modal fade" id="addEntryModal" tabindex="-1" aria-labelledby="addEntryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form id="manualAddEntryForm" action="/Note/AddEntry">
            @Html.AntiForgeryToken()
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Pilih Tanggal</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="NoteId" value="@Model.Id" />
                    <label for="newEntryDate" class="form-label">Tanggal</label>
                    <input type="date" name="Date" class="form-control" id="newEntryDate" required />
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Buat Entry</button>
                </div>
            </div>
        </form>
    </div>
</div>

@if (entry != null)
{

    <div class="mb-4 d-flex justify-content-evenly card pt-3">
        <div class="mx-2 w-100">
            <div class="d-flex pe-3 text-nowrap input-group">
                <input placeholder="Title" class="form-control bold ms-2 mb-2 col-10" type="text" name="Title_Note" value="@entry?.Title_Note" />
                <p class="badge bg-label-dark col-2 ms-2"><i class="bi bi-calendar-event me-1"></i> @selectedDate.ToString("dd MMMM yyyy")</p>
            </div>
            <div class="d-flex pe-3 px-2 input-group mb-2">
                <!-- Status Radio Button -->
                <div class="d-flex align-items-start col-4 me-2 p-2">
                    <div class="form-check me-2">
                        <input class="form-check-input" type="radio" name="Status_absen" id="statusMasuk" value="1" @(entry?.Status_absen == "1" ? "checked" : "") />
                        <label class="form-check-label" for="statusMasuk">Masuk</label>
                    </div>
                    <div class="form-check me-2">
                        <input class="form-check-input" type="radio" name="Status_absen" id="statusCuti" value="2" @(entry?.Status_absen == "2" ? "checked" : "") />
                        <label class="form-check-label" for="statusCuti">Cuti</label>
                    </div>
                    <div class="form-check me-2">
                        <input class="form-check-input" type="radio" name="Status_absen" id="statusLibur" value="3" @(entry?.Status_absen == "3" ? "checked" : "") />
                        <label class="form-check-label" for="statusLibur">Libur</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="Status_absen" id="statusOthers" value="4" @(entry?.Status_absen == "4" ? "checked" : "") />
                        <label class="form-check-label" for="statusOthers">Others</label>
                    </div>
                </div>
                <input placeholder="Start Time" class="col-2 time-picker form-control mb-2" type="time" name="WH_start" value="@entry?.WH_start" />
                <input placeholder="End Time" class="col-2 time-picker form-control mb-2" type="time" name="WH_end" value="@entry?.WH_end" />
                <input placeholder="Overtime Start" class="col-2 time-picker form-control mb-2" type="time" name="OT_start" value="@entry?.OT_start" />
                <input placeholder="Overtime End" class="col-2 time-picker form-control mb-2" type="time" name="OT_end" value="@entry?.OT_end" />

            </div>

        </div>
    </div>
    <div class="card rounded-4 shadow-sm">
        <div class="card-body">
            <form method="post" id="entryForm">
                @Html.AntiForgeryToken()
                <input type="hidden" name="NoteId" value="@Model.Id" />
                <input type="hidden" name="Date" id="dateNote" value="@selectedDate" />
                @if (entry != null)
                {
                    <input type="hidden" name="Id" value="@entry.Id" />
                }

                <textarea class="min-vh-100" id="ContentEditor" name="Content">@entry?.Content</textarea>

                <div class="mt-3 end-0 bottom-0 m-5 rounded-pill" style="position: fixed">
                    <button type="submit" class="btn btn-primary me-3" id="submitBtn">
                        <i class="bi bi-save me-1"></i> Simpan Catatan
                    </button>
                </div>
            </form>
        </div>
    </div>
}
else
{

    <div class="misc-wrapper">
        <h1 class="mb-2 mx-2">Note is Empty</h1>
        <p class="mb-4 mx-2">You Can Create Note by button bellow</p>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addEntryModal">
            <i class="bi bi-calendar-plus"></i>&nbsp; Entry Baru
        </button>
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function(){
            $('.time-picker').flatpickr({
                enableTime: true,
                noCalendar: true,
                time_24hr: true,
            });
            $("input[name='Status_absen']").on("change", function () {
                var statusAbsen = $("input[name='Status_absen']:checked").val();

                if (statusAbsen === "1" || statusAbsen === "4") {
                    $('.time-picker').removeClass("d-none").addClass("d-block");
                } else {
                    $('.time-picker').addClass("d-none").removeClass("d-block");
                }
            });

        });
        tinymce.init({
            selector: '#ContentEditor',
            menubar: false,
            plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount autosave code fullscreen',
            toolbar: 'saveButton | code fullscreen | myPageBreakButton | undo redo | blocks fontsize | bold italic forecolor removeformat | link image table | alignleft aligncenter alignright lineheight | numlist bullist indent outdent ',
            branding: false,
            setup: function (editor){
                //save all tiny
                let activeNotification = null;
                editor.ui.registry.addButton('saveButton', {
                    text: 'Save Page',
                    icon: 'save',
                    onAction: function () {
                        const $btn = $("#submitBtn");
                        const originalHtml = $btn.html();
                        $btn.prop("disabled", true).html(`<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span> Menyimpan...`);

                        const token = $('input[name="__RequestVerificationToken"]').val();
                        const content = tinymce.get("ContentEditor").getContent();

                        const isEdit = $("input[name='Id']").length > 0;
                        const url = isEdit ? "/Note/UpdateEntry" : "/Note/AddEntry";

                        // ⏳ Tampilkan notifikasi loading
                        const loadingNotification = editor.notificationManager.open({
                            text: 'Saving document... <i class="fas fa-spinner fa-spin"></i>',
                            type: 'info',
                            closeButton: false,
                            timeout: 0 // notifikasi tidak akan hilang otomatis
                        });

                        $.ajax({
                            type: "POST",
                            url: url,
                            data: {
                                __RequestVerificationToken: token,
                                Id: $("input[name='Id']").val(),
                                NoteId: $("input[name='NoteId']").val(),
                                Date: $("#dateNote").val(),
                                Title_Note: $("input[name='Title_Note']").val(),
                                WH_start: $("input[name='WH_start']").val(),
                                WH_end: $("input[name='WH_end']").val(),
                                OT_start: $("input[name='OT_start']").val(),
                                OT_end: $("input[name='OT_end']").val(),
                                Status_absen: $("input[name='Status_absen']:checked").val(),
                                Content: content
                            },
                            success: function (response) {
                                loadingNotification.close();

                                // ✅ Tampilkan hasil sukses/gagal
                                activeNotification = editor.notificationManager.open({
                                    text: response.message || 'Document saved',
                                    type: 'info',
                                    timeout: 0
                                });
                                $btn.prop("disabled", false).html(`<i class="bi bi-save me-1"></i> Simpan Catatan`);
                            },
                            error: function () {
                                $btn.prop("disabled", false).html(originalHtml);
                                alert("Terjadi kesalahan saat menyimpan.");
                            }
                        });
                    }
                });

                // ✅ Tutup notifikasi kalau ada perubahan
                editor.on('Change Input NodeChange KeyUp Paste Undo Redo', function () {
                    if (activeNotification) {
                        activeNotification.close();
                        activeNotification = null;
                    }
                });


            }
        });

        $("#entryForm").submit(function (e) {
            e.preventDefault();

            const $btn = $("#submitBtn");
            const originalHtml = $btn.html();
            $btn.prop("disabled", true).html(`<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span> Menyimpan...`);

            const token = $('input[name="__RequestVerificationToken"]').val();
            const content = tinymce.get("ContentEditor").getContent();

            const isEdit = $("input[name='Id']").length > 0;
            const url = isEdit ? "/Note/UpdateEntry" : "/Note/AddEntry";

            $.ajax({
                type: "POST",
                url: url,
                data: {
                    __RequestVerificationToken: token,
                    Id: $("input[name='Id']").val(),
                    NoteId: $("input[name='NoteId']").val(),
                    Date: $("#dateNote").val(),
                    Title_Note: $("input[name='Title_Note']").val(),
                    WH_start: $("input[name='WH_start']").val(),
                    WH_end: $("input[name='WH_end']").val(),
                    OT_start: $("input[name='OT_start']").val(),
                    OT_end: $("input[name='OT_end']").val(),
                    Status_absen: $("input[name='Status_absen']:checked").val(),
                    Content: content
                },
                success: function () {
                    location.reload();
                },
                error: function () {
                    $btn.prop("disabled", false).html(originalHtml);
                    alert("Terjadi kesalahan saat menyimpan.");
                }
            });
        });
        $("#manualAddEntryForm").submit(function (e) {
            e.preventDefault();

            const token = $('input[name="__RequestVerificationToken"]').val();
            const noteId = $(this).find("input[name='NoteId']").val();
            const date = $(this).find("input[name='Date']").val();

            const $btn = $(this).find("button[type='submit']");
            const originalHtml = $btn.html();
            $btn.prop("disabled", true).html(`<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span> Membuat...`);

            $.ajax({
                type: "POST",
                url: "/Note/AddEntry",
                data: {
                    __RequestVerificationToken: token,
                    NoteId: noteId,
                    Date: date,
                    Content: "" // kosongkan, nanti bisa diedit di halaman detail
                },
                success: function () {
                    // Setelah berhasil insert, redirect ke halaman detail dengan tanggal tersebut
                    window.location.href = `/Note/Detail?id=${noteId}&date=${date}`;
                },
                error: function () {
                    $btn.prop("disabled", false).html(originalHtml);
                    alert("Gagal membuat entry.");
                }
            });
        });


    </script>
}
